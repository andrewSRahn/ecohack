/**
 * Load controllers, directives, filters, services before bootstrapping the application.
 * NOTE: These are named references that are defined inside of the config.js RequireJS configuration file.
 */
define([
    'jquery',
    'angular',
    'main',
    'routes',
    'interceptors',
    'px-datasource',
    'ng-bind-polymer'
], function ($, angular) {
    'use strict';

    /**
     * Application definition
     * This is where the AngularJS application is defined and all application dependencies declared.
     * @type {module}
     */
    var predixApp = angular.module('predixApp', [
        'app.routes',
        'app.interceptors',
        'sample.module',
        'predix.datasource',
        'px.ngBindPolymer'
    ]);
    

    /**
     * Main Controller
     * This controller is the top most level controller that allows for all
     * child controllers to access properties defined on the $rootScope.
     */
    predixApp.controller('MainCtrl', ['$scope', '$rootScope', function ($scope, $rootScope) {

        //Global application object
        window.App = $rootScope.App = {
            version: '1.0',
            name: 'Predix Seed',
            session: {},
            tabs: [
                {icon: 'fa-tachometer', state: 'dashboards', label: 'EcoDashboard'},
                {state: 'custom1', label: 'Custom tab1'},
                {state: 'wind', label: 'Wind'},
                {state: 'solar', label: 'Solar'}
            ]
        };

        // $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {
        //     if (angular.isObject(error) && angular.isString(error.code)) {
        //         switch (error.code) {
        //             case 'UNAUTHORIZED':
        //                 //redirect
        //                 predixUserService.login(toState);
        //                 break;
        //             default:
        //                 //go to other error state
        //         }
        //     }
        //     else {
        //         // unexpected error
        //     }
        // });
    }]);
    
    

	 predixApp.controller('SolarCtrl', ['$scope', '$rootScope', function ($scope, $rootScope) {
		$scope.helloSolar = 'hello solar';	 
		
	 }]);
	 
	 predixApp.controller('WindCtrl', ['$scope', '$rootScope', function ($scope, $rootScope) {
	 	$scope.helloWind = 'hello wind';
	 	$scope.comingFromFactory = $scope.helloFactory;
		console.writeline('hello console');
	 }]);
	 
	 predixApp.factory(['$scope', '$rootScope', function ($scope, $rootScope) {
	 	$scope.helloFactory = 'hello factory';
	 }]);
	 
    window.predixApp = predixApp;

    //Return the application  object
    return predixApp;
});
